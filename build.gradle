buildscript {
    ext {
        kotlinVersion = '1.3.20'
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
    }
}
plugins {
    id 'com.gradle.build-scan' version '1.16'
    id 'io.gitlab.arturbosch.detekt' version '1.0.0.RC9.2'
}
apply plugin: 'com.gradle.build-scan'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-jpa'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.github.nikitavbv'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")

    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-security')
    implementation('org.springframework.boot:spring-boot-devtools')

    implementation('com.fasterxml.jackson.module:jackson-module-kotlin')
    implementation('com.fasterxml.jackson.core:jackson-core')
    implementation('com.fasterxml.jackson.core:jackson-databind')
    implementation('com.fasterxml.jackson.core:jackson-annotations')

    implementation('io.jsonwebtoken:jjwt-api:0.10.5')
    implementation('io.jsonwebtoken:jjwt-impl:0.10.5')
    implementation('io.jsonwebtoken:jjwt-jackson:0.10.5')

    implementation('mysql:mysql-connector-java')

    implementation('org.glassfish.jersey.core:jersey-common:2.22.2')

    implementation('javax.xml.bind:jaxb-api')
    implementation('com.sun.xml.bind:jaxb-core:2.3.0.1')
    implementation('com.sun.xml.bind:jaxb-impl:2.1')
    implementation('javax.activation:activation:1.1.1')
    implementation('javax.ws.rs:javax.ws.rs-api:2.1.1')
    testImplementation('org.apache.httpcomponents:httpclient:4.5.6')

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')

    implementation('org.apache.httpcomponents:httpclient:4.5.6')


    // dependencies for CI
    testImplementation('com.h2database:h2')
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

detekt {
    toolVersion = "1.0.0.RC9.2"
    input = files("src/main/kotlin")
    filters = ".*/resources/.*"
    config = files("detekt-config.yml")
}

check.dependsOn jacocoTestReport
